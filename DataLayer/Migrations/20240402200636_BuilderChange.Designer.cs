// <auto-generated />
using System;
using DataLayer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataLayer.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20240402200636_BuilderChange")]
    partial class BuilderChange
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DataLayer.Models.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = new Guid("cbd81efe-94d7-4015-97d1-e0f489c95f45"),
                            Age = 21,
                            Name = "Gabi"
                        },
                        new
                        {
                            Id = new Guid("eb1ea9f2-aac2-411d-8558-a59964f68002"),
                            Age = 20,
                            Name = "Maria"
                        },
                        new
                        {
                            Id = new Guid("2498bde0-7373-4978-9df7-40d937157ddb"),
                            Age = 30,
                            Name = "Ana"
                        });
                });

            modelBuilder.Entity("DataLayer.Models.Office", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Devices")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId")
                        .IsUnique();

                    b.ToTable("Offices");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6d35550a-4038-4977-b311-344d9b4cc87c"),
                            Devices = "Computer, Laptop, Printer",
                            EmployeeId = new Guid("cbd81efe-94d7-4015-97d1-e0f489c95f45")
                        },
                        new
                        {
                            Id = new Guid("d2e90ff1-7f68-411c-b5f4-f33866ba236f"),
                            Devices = "Laptop, Printer",
                            EmployeeId = new Guid("eb1ea9f2-aac2-411d-8558-a59964f68002")
                        },
                        new
                        {
                            Id = new Guid("a214bbc1-d5aa-4613-a0fc-59b05ae6a6fe"),
                            Devices = "Computer",
                            EmployeeId = new Guid("2498bde0-7373-4978-9df7-40d937157ddb")
                        });
                });

            modelBuilder.Entity("DataLayer.Models.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = new Guid("493b8291-cebf-4a1b-983a-cad4420a2341"),
                            DateTime = new DateTime(2024, 4, 2, 23, 6, 36, 248, DateTimeKind.Local).AddTicks(3862),
                            EmployeeId = new Guid("cbd81efe-94d7-4015-97d1-e0f489c95f45")
                        },
                        new
                        {
                            Id = new Guid("e905b0d2-9080-48cd-9f8d-7cd42231993e"),
                            DateTime = new DateTime(2024, 4, 2, 23, 6, 36, 248, DateTimeKind.Local).AddTicks(3922),
                            EmployeeId = new Guid("eb1ea9f2-aac2-411d-8558-a59964f68002")
                        },
                        new
                        {
                            Id = new Guid("ba42d62b-b5a1-461c-a215-aa805463fc2a"),
                            DateTime = new DateTime(2024, 4, 2, 23, 6, 36, 248, DateTimeKind.Local).AddTicks(3925),
                            EmployeeId = new Guid("2498bde0-7373-4978-9df7-40d937157ddb")
                        },
                        new
                        {
                            Id = new Guid("50ac8ee4-37d4-4b01-a031-6a1bc0ec83f7"),
                            DateTime = new DateTime(2024, 4, 2, 23, 6, 36, 248, DateTimeKind.Local).AddTicks(3927),
                            EmployeeId = new Guid("cbd81efe-94d7-4015-97d1-e0f489c95f45")
                        });
                });

            modelBuilder.Entity("DataLayer.Models.OrderPizza", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PizzaId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("PizzaId");

                    b.ToTable("OrderPizza");

                    b.HasData(
                        new
                        {
                            Id = new Guid("848d7d6f-eb61-42cb-9ed8-51df2398c650"),
                            OrderId = new Guid("493b8291-cebf-4a1b-983a-cad4420a2341"),
                            PizzaId = new Guid("cb44436a-4daa-4bb4-b3fa-3c82a15363ab")
                        },
                        new
                        {
                            Id = new Guid("20fef68b-bf30-4799-af5b-570bb5017e7d"),
                            OrderId = new Guid("493b8291-cebf-4a1b-983a-cad4420a2341"),
                            PizzaId = new Guid("dd22afa8-d31b-466e-80ae-767f6f5bc3b8")
                        },
                        new
                        {
                            Id = new Guid("3b9d9ed8-2c2a-4f30-9f7b-d730420d7e69"),
                            OrderId = new Guid("e905b0d2-9080-48cd-9f8d-7cd42231993e"),
                            PizzaId = new Guid("b6ff7fa5-de07-4fb1-86e5-a0bd5bce11cf")
                        },
                        new
                        {
                            Id = new Guid("7dc06549-91fa-47d9-94be-da6f939d86f0"),
                            OrderId = new Guid("ba42d62b-b5a1-461c-a215-aa805463fc2a"),
                            PizzaId = new Guid("b6ff7fa5-de07-4fb1-86e5-a0bd5bce11cf")
                        },
                        new
                        {
                            Id = new Guid("73d87cee-5fec-4933-ae71-43211f13baaa"),
                            OrderId = new Guid("ba42d62b-b5a1-461c-a215-aa805463fc2a"),
                            PizzaId = new Guid("6fcec86f-115c-4d2d-a609-c58303e2f44b")
                        },
                        new
                        {
                            Id = new Guid("2b35e444-e2bc-49ea-878e-67a9c25a77a8"),
                            OrderId = new Guid("50ac8ee4-37d4-4b01-a031-6a1bc0ec83f7"),
                            PizzaId = new Guid("cb44436a-4daa-4bb4-b3fa-3c82a15363ab")
                        },
                        new
                        {
                            Id = new Guid("8dcb2b5f-eed8-41fb-ae64-ae038996dcfe"),
                            OrderId = new Guid("50ac8ee4-37d4-4b01-a031-6a1bc0ec83f7"),
                            PizzaId = new Guid("b6ff7fa5-de07-4fb1-86e5-a0bd5bce11cf")
                        },
                        new
                        {
                            Id = new Guid("6c53ecc2-f12b-4cf5-8852-10543ea94e78"),
                            OrderId = new Guid("50ac8ee4-37d4-4b01-a031-6a1bc0ec83f7"),
                            PizzaId = new Guid("6fcec86f-115c-4d2d-a609-c58303e2f44b")
                        });
                });

            modelBuilder.Entity("DataLayer.Models.Pizza", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("Pizzas");

                    b.HasData(
                        new
                        {
                            Id = new Guid("cb44436a-4daa-4bb4-b3fa-3c82a15363ab"),
                            Description = "Mozzarella, Salam Picant, Sos Picant",
                            Name = "Diavola",
                            Price = 32f
                        },
                        new
                        {
                            Id = new Guid("dd22afa8-d31b-466e-80ae-767f6f5bc3b8"),
                            Description = "Mozzarella, Salam, Cabanos, Sos",
                            Name = "Salami",
                            Price = 28f
                        },
                        new
                        {
                            Id = new Guid("b6ff7fa5-de07-4fb1-86e5-a0bd5bce11cf"),
                            Description = "Mozzarella, Salam, Sunca, Sos",
                            Name = "Capricioasa",
                            Price = 34f
                        },
                        new
                        {
                            Id = new Guid("6fcec86f-115c-4d2d-a609-c58303e2f44b"),
                            Description = "Mozzarella, Branza",
                            Name = "Margherita",
                            Price = 24f
                        });
                });

            modelBuilder.Entity("DataLayer.Models.Office", b =>
                {
                    b.HasOne("DataLayer.Models.Employee", "Employee")
                        .WithOne("Office")
                        .HasForeignKey("DataLayer.Models.Office", "EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("DataLayer.Models.Order", b =>
                {
                    b.HasOne("DataLayer.Models.Employee", "Employee")
                        .WithMany("Orders")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("DataLayer.Models.OrderPizza", b =>
                {
                    b.HasOne("DataLayer.Models.Order", null)
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataLayer.Models.Pizza", null)
                        .WithMany()
                        .HasForeignKey("PizzaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DataLayer.Models.Employee", b =>
                {
                    b.Navigation("Office")
                        .IsRequired();

                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
